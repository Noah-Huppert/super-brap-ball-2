[gd_resource type="ShaderMaterial" load_steps=3 format=2]

[sub_resource type="VisualShaderNodeColorConstant" id=1]
constant = Color( 0, 1, 0, 1 )

[sub_resource type="VisualShader" id=2]
code = "shader_type spatial;
render_mode specular_schlick_ggx, async_visible;




void vertex() {
// Output:0

}

void fragment() {
// Color:2
	vec3 n_out2p0 = vec3(0.000000, 1.000000, 0.000000);
	float n_out2p1 = 1.000000;

// Output:0
	ALBEDO = n_out2p0;
	ALPHA = n_out2p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -26.5888, 154.279 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 220, 180 )
nodes/fragment/connections = PackedInt32Array( 2, 0, 0, 0, 2, 1, 0, 1 )

[resource]
shader = SubResource( 2 )
